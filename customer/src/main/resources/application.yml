server:
  port: 8080

spring:
  application:
    name: customer
  datasource:
    password: password
    url: jdbc:postgresql://localhost:5432/customer
    username: ricsanfre
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: true
  # Rabbit MQ server
  rabbitmq:
    addresses: localhost:5672
    username: guest
    password: guest

  # Kafka
  kafka:
    bootstrap-servers: localhost:19092
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    enabled: false

management:
  # No sampling configuration
  tracing:
    sampling:
      probability: 1.0
  # export to a zipkin server

  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans

# Kafka config
kafka:
  notification:
    topic: notification

# Adding traceId and SpanId to logs
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"

# Microservices URL
clients:
  customer:
    url: http://localhost:8080
  fraud:
    url: http://localhost:8081
  notification:
    url: http://localhost:8082

# Message Bus
message:
  broker:
    type: kafka